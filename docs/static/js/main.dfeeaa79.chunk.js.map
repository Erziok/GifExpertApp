{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/Footer.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","Footer","pie","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"sLAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OAEI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAQlB,SACI,uBACIO,UAAU,cACVC,KAAK,OACLC,MAAQV,EACRW,SAtBc,SAACR,GACvBF,EAAeE,EAAES,OAAOF,a,+BCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEKI,MAAMF,GAFX,cAEbG,EAFa,gBAGEA,EAAUC,OAHZ,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,sBAAKR,UAAY,8DAAjB,UACI,qBAAKsB,IAAKd,EAAKe,IAAKL,IACpB,4BAAIA,QCFHM,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZf,mBAAS,CAC/BsB,KAAM,GACNY,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAmBtC,OAbAC,qBAAW,WAEPvB,EAASC,GACJuB,MAAM,SAAAC,GACHH,EAAS,CACLd,KAAKiB,EACLL,SAAQ,SAKrB,CAACnB,IAEGoB,EDhBwBK,CAAazB,GAAhCa,EAFuB,EAE5BN,KAAaY,EAFe,EAEfA,QAGpB,OACI,qCACI,oBAAIzB,UAAU,mDAAd,SAAkEM,IAEjEmB,GAAW,mBAAGzB,UAAU,8CAAb,wBAEZ,qBAAKA,UAAU,aAAf,SAIQmB,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEPxBe,EAXA,SAAC,GAAW,IAAVC,EAAS,EAATA,IACb,OACI,wBAAQjC,UAAU,cAAlB,SACI,qBAAKA,UAAU,2CAAf,SACI,6BAAKiC,SCFRC,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,uBAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAQ9B,OACI,qCACI,oBAAIU,UAAU,8BAAd,0BAEA,cAAC,EAAD,CAAaV,cAAgBA,IAE7B,uBAIA,6BAEQ6C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADJA,QAMxB,uBACA,cAAC,EAAD,CACI2B,IAAI,sCC5BpBG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.dfeeaa79.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport '../index.css';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats ]);\r\n            setInputValue('');\r\n        } \r\n\r\n        \r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                className=\"barra-texto\"\r\n                type=\"text\"\r\n                value= {inputValue}\r\n                onChange= { handleInputChange }\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=oOu0omYMpd4RYBX1RQLZABOdqZcwITVx`;\r\n    const respuesta = await fetch(url)\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n    return (\r\n        <div className = \"font-weight-bold card animate__animated animate__fadeInLeft\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInLeft text-white\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash text-white\">Loading...</p>}\r\n\r\n            <div className=\"card-grid \">\r\n                \r\n\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key= { img.id }\r\n                            {...img }\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [], \r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state; // { data:[], loading: true };\r\n}","import React from 'react';\r\nimport '../index.css';\r\n\r\nconst Footer = ({pie}) => {\r\n    return ( \r\n        <footer className=\"main-footer\">\r\n            <div className=\"text-white text-center pt-5 texto-footer\">\r\n                <h4>{pie}</h4>\r\n            </div>\r\n        </footer>\r\n        \r\n     )\r\n}\r\n \r\nexport default Footer;","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\nimport Footer from './components/Footer';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Shingeki no Kyojin'])\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories, 'HunterXHunter']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"text-white font-weight-bold\">GifExpertApp</h2>\r\n            \r\n            <AddCategory setCategories={ setCategories }/>\r\n\r\n            <hr />\r\n\r\n            \r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key = { category }\r\n                            category = {category} \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n            <hr></hr>\r\n            <Footer \r\n                pie=\"Made With React - Erziok 2021\"\r\n            />\r\n        </>\r\n        \r\n        \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}